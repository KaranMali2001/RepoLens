"""create project & update txn table

Revision ID: 22907d47cc67
Revises: d02ac6350132
Create Date: 2024-12-16 13:17:51.343847

"""

from typing import Sequence, Union
from sqlalchemy.dialects.postgresql import ENUM
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "22907d47cc67"
down_revision: Union[str, None] = "d02ac6350132"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
txn_enum = ENUM("credit_purchase", "canceled", "transfer", name="type")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("clerk_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("credits_required", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("github_url", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("last_synced", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clerk_id"],
            ["users.clerk_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(
        "CREATE TYPE txntype AS ENUM ('credit_purchase', 'canceled', 'refund', 'bonus')"
    )

    op.drop_column("txns", "txn_type")
    txn_enum.create(op.get_bind())
    op.add_column(
        "txns",
        sa.Column(
            "txn_type",
            sa.Enum("CREDIT_PURCHASE", "CANCELED", "REFUND", "BONUS", name="txntype"),
            server_default="credit_purchase",
            nullable=False,
        ),
    )

    op.drop_column("txns", "updated_at")
    op.alter_column(
        "users", "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("txns", "txn_type")

    # Drop the ENUM type itself if no longer in use
    op.execute("DROP TYPE IF EXISTS txntype")
    op.alter_column(
        "users", "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
    )
    op.add_column("txns", sa.Column("updated_at", autoincrement=False, nullable=True))
    op.alter_column(
        "txns",
        "txn_type",
        existing_type=sa.Enum(
            "CREDIT_PURCHASE", "CANCELED", "REFUND", "BONUS", name="txntype"
        ),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    op.drop_table("projects")
    # ### end Alembic commands ###
